{"version":3,"sources":["../src/sticky.js"],"names":["monitoredEventNames","Sticky","propKeys","state","updateContext","inherited","node","containerNode","setState","containerOffset","distanceFromBottom","getDistanceFromBottom","recomputeState","isSticky","height","getHeight","width","getWidth","xOffset","getXOffset","hasChanged","channel","update","data","offset","props","onStickyStateChange","componentDidMount","context","subscribe","on","componentWillReceiveProps","shouldComponentUpdate","newProps","newState","length","valuesChanged","some","key","hasOwnProperty","componentDidUpdate","componentWillUnmount","off","unsubscribe","render","placeholderStyle","paddingBottom","className","style","transform","isActive","stickyStyle","position","top","left","bottomLimit","bottomOffset","stickyClassName","topOffset","children","refs","placeholder","getBoundingClientRect","findDOMNode","getDistanceFromTop","bottom","fromTop","fromBottom","topBreakpoint","bottomBreakpoint","events","callback","forEach","evt","window","addEventListener","removeEventListener","Component","propTypes","number","string","bool","func","object","defaultProps","contextTypes","any"],"mappings":"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","file":"sticky.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst monitoredEventNames = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\n\nexport default class Sticky extends React.Component {\n  static propTypes = {\n    bottomOffset: PropTypes.number,\n    className: PropTypes.string,\n    isActive: PropTypes.bool,\n    onStickyStateChange: PropTypes.func,\n    stickyClassName: PropTypes.string,\n    stickyStyle: PropTypes.object,\n    style: PropTypes.object,\n    topOffset: PropTypes.number,\n  };\n\n  static defaultProps = {\n    bottomOffset: 0,\n    className: '',\n    isActive: true,\n    onStickyStateChange: () => {},\n    stickyClassName: 'sticky',\n    stickyStyle: {},\n    style: {},\n    topOffset: 0,\n  };\n\n  static contextTypes = {\n    'sticky-channel': PropTypes.any\n  };\n\n  propKeys = null;\n  state = {};\n\n  componentDidMount() {\n    this.channel = this.context['sticky-channel'];\n    this.channel.subscribe(this.updateContext);\n\n    this.on(monitoredEventNames, this.recomputeState);\n    this.recomputeState();\n\n    this.propKeys = Object.keys(this.props);\n  }\n\n  componentWillReceiveProps() {\n    this.recomputeState();\n  }\n\n  shouldComponentUpdate(newProps, newState) {\n    // Have we changed the number of props?\n    if (Object.keys(newProps).length != this.propKeys.length) return true;\n\n    // Have we changed any prop values?\n    const valuesChanged = this.propKeys.some((key) => newProps.hasOwnProperty(key) && newProps[key] !== this.props[key]);\n    if (valuesChanged) return true;\n\n    // Have we changed any state that will always impact rendering?\n    const state = this.state;\n    if (newState.isSticky !== state.isSticky) return true;\n\n    // If we are sticky, have we changed any state that will impact rendering?\n    if (state.isSticky) {\n      if (newState.height !== state.height) return true;\n      if (newState.width !== state.width) return true;\n      if (newState.xOffset !== state.xOffset) return true;\n      if (newState.containerOffset !== state.containerOffset) return true;\n      if (newState.distanceFromBottom !== state.distanceFromBottom) return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.propKeys = Object.keys(this.props);\n  }\n\n  componentWillUnmount() {\n    this.off(monitoredEventNames, this.recomputeState);\n    this.channel.unsubscribe(this.updateContext);\n  }\n\n  /*\n   * The special sauce.\n   */\n  render() {\n    const placeholderStyle = { paddingBottom: 0 };\n    let className = this.props.className;\n\n    // To ensure that this component becomes sticky immediately on mobile devices instead\n    // of disappearing until the scroll event completes, we add `transform: translateZ(0)`\n    // to 'kick' rendering of this element to the GPU\n    // @see http://stackoverflow.com/questions/32875046\n    let style = { transform: this.props.isActive ? 'translateZ(0)' : '', ...this.props.style };\n\n    if (this.state.isSticky) {\n      const stickyStyle = {\n        position: 'fixed',\n        top: this.state.containerOffset,\n        left: this.state.xOffset,\n        width: this.state.width\n      };\n\n      const bottomLimit = this.state.distanceFromBottom - this.state.height - this.props.bottomOffset;\n      if (this.state.containerOffset > bottomLimit) {\n        stickyStyle.top = bottomLimit;\n      }\n\n      placeholderStyle.paddingBottom = this.state.height;\n\n      className += ` ${this.props.stickyClassName}`;\n      style = {...style, ...stickyStyle, ...this.props.stickyStyle};\n    }\n\n    const {\n      topOffset,\n      isActive,\n      stickyClassName,\n      stickyStyle,\n      bottomOffset,\n      onStickyStateChange,\n      ...props\n    } = this.props;\n\n    return (\n      <div>\n        <div ref=\"placeholder\" style={placeholderStyle}></div>\n        <div {...props} ref=\"children\" className={className} style={style}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  getXOffset() {\n    return this.refs.placeholder.getBoundingClientRect().left;\n  }\n\n  getWidth() {\n    return this.refs.placeholder.getBoundingClientRect().width;\n  }\n\n  getHeight() {\n    return ReactDOM.findDOMNode(this.refs.children).getBoundingClientRect().height;\n  }\n\n  getDistanceFromTop() {\n    return this.refs.placeholder.getBoundingClientRect().top;\n  }\n\n  getDistanceFromBottom() {\n    if (!this.containerNode) return 0;\n    return this.containerNode.getBoundingClientRect().bottom;\n  }\n\n  isSticky() {\n    if (!this.props.isActive) return false;\n\n    const fromTop = this.getDistanceFromTop();\n    const fromBottom = this.getDistanceFromBottom();\n\n    const topBreakpoint = this.state.containerOffset - this.props.topOffset;\n    const bottomBreakpoint = this.state.containerOffset + this.props.bottomOffset;\n\n    return fromTop <= topBreakpoint && fromBottom >= bottomBreakpoint;\n  }\n\n  updateContext = ({ inherited, node }) => {\n    this.containerNode = node;\n    this.setState({\n      containerOffset: inherited,\n      distanceFromBottom: this.getDistanceFromBottom()\n    });\n  };\n\n  recomputeState = () => {\n    const isSticky = this.isSticky();\n    const height = this.getHeight();\n    const width = this.getWidth();\n    const xOffset = this.getXOffset();\n    const distanceFromBottom = this.getDistanceFromBottom();\n    const hasChanged = this.state.isSticky !== isSticky;\n\n    this.setState({ isSticky, height, width, xOffset, distanceFromBottom });\n\n    if (hasChanged) {\n      if (this.channel) {\n        this.channel.update((data) => {\n          data.offset = (isSticky ? height : 0);\n        });\n      }\n\n      this.props.onStickyStateChange(isSticky);\n    }\n  };\n\n  on(events, callback) {\n    events.forEach((evt) => {\n      window.addEventListener(evt, callback, true);\n    });\n  }\n\n  off(events, callback) {\n    events.forEach((evt) => {\n      window.removeEventListener(evt, callback, true);\n    });\n  }\n}\n"]}